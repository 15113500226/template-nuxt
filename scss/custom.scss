* {
  box-sizing: border-box;
  font-family: Arial, 'Microsoft YaHei';
}
body {
  font-size: $fontSizeBase;
  color: $textColorRegular;
}
:focus {
  outline: none;
}
input:-webkit-autofill { // 覆盖输入框自动填充底色
  box-shadow: 0 0 0px 1000px #ffffff inset;
  -webkit-text-fill-color: $textColorRegular;
  caret-color: $textColorRegular;
}

/* 
  设置在弹性容器上的属性
*/
.d_f {
  display: -webkit-flex;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
.d_if {
  display: -webkit-inline-flex;
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
}
/* flex-direction属性决定主轴的方向（即项目的排列方向） */
.fd_rr {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
}
.fd_c {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.fd_cr {
  -webkit-box-orient: vertical;
  -webkit-box-direction: reverse;
  -ms-flex-direction: column-reverse;
  flex-direction: column-reverse;
}
/* 默认情况下，项目都排在一条线（又称"轴线"）上。flex-wrap属性定义，如果一条轴线排不下，如何换行 */
.fw_n {
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
}
.fw_w {
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}
.fw_wr {
  -ms-flex-wrap: wrap-reverse;
  flex-wrap: wrap-reverse;
}
/* justify-content属性定义了项目在主轴上的对齐方式 */
.jc_fs {
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}
.jc_fe {
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}
.jc_c {
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}
.jc_sb {
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
}
.jc_sa {
  -ms-flex-pack: distribute;
  justify-content: space-around;
}
/* align-items属性定义项目在交叉轴上如何对齐 */
.ai_fs {
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: flex-start;
}
.ai_fe {
  -webkit-box-align: end;
  -ms-flex-align: end;
  align-items: flex-end;
}
.ai_c {
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}
.ai_b {
  -webkit-box-align: baseline;
  -ms-flex-align: baseline;
  align-items: baseline;
}
/* align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用 */
.ac_fs {
  -ms-flex-line-pack: start;
  align-content: flex-start;
}
.ac_fe {
  -ms-flex-line-pack: end;
  align-content: flex-end;
}
.ac_c {
  -ms-flex-line-pack: center;
  align-content: center;
}
.ac_sb {
  -ms-flex-line-pack: justify;
  align-content: space-between;
}
.ac_sa {
  -ms-flex-line-pack: distribute;
  align-content: space-around;
}

/*
  设置在弹性项目上的属性
*/
/* order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。以下是兼容样式写法示例，可根据需要修改属性值。*/
.o_1 {
  -webkit-box-ordinal-group: 2;
  -ms-flex-order: 1;
  order: 1;
}
/* flex为flex-grow、flex-shrink、flex-basis的合并项 */
.f_a {
  flex: auto;
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}
.f_n {
  flex: 0;
  -webkit-box-flex: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}
/* flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。以下是兼容样式写法示例，可根据需要修改属性值 */
.fg_0 {
  -webkit-box-flex: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
}
.fg_1 {
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}
/* flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。以下是兼容样式写法示例，可根据需要修改属性值 */
.fs_0 {
  -ms-flex-negative: 0;
  flex-shrink: 0;
}
.fs_1 {
  -ms-flex-negative: 1;
  flex-shrink: 1;
}
/*
  flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。
  它的默认值为auto，即项目的本来大小。以下是兼容样式写法示例，可根据需要修改属性值
*/
.fb_100px {
  -ms-flex-preferred-size: 100px;
  flex-basis: 100px;
}
/* align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。
  默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch
*/
.as_fs {
  -ms-flex-item-align: start;
  align-self: flex-start;
}
.as_fe {
  -ms-flex-item-align: end;
  align-self: flex-end;
}
.as_c {
  -ms-flex-item-align: center;
  align-self: center;
}
.as_b {
  -ms-flex-item-align: baseline;
  align-self: baseline;
}

/* 文本超出省略 */
.txt_els { // 单行
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
.multi_txt_els { // 多行
  overflow: hidden;
  text-overflow: ellipsis;
  word-break: break-all;
  white-space: pre-wrap;
  display: -webkit-box;
  -webkit-box-orient: vertical;
}